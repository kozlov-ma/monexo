from telethon import events
from telethon.tl.custom import Message
from telethon.tl.types import User


async def send_help(event: Message) -> None:
    help_msg = """
**Что может этот бот?**
    - Помогает учитывать ежедневные расходы и строить бюджет на небольшой срок
    - В конце дня предоставляет статистику за день

**Начало работы**
    - Чтобы указать срок и бюджет, используйте /settings

**Доходы и расходы**
    - Чтобы записать трату, просто отправьте боту число, например 1000
    - Для записи трат можно использовать арифметические выражения, например 1000 + 500 * 2 или 600 / 5
    - Чтобы записать пополнение, используйте число со знаком '+', например +1000

**Что дальше?**
    - Посмотреть статистику на сегодня можно с помощью /stats
    - Каждые 24 часа бот будет сообщать вам о текущем состоянии бюджета и давать статистику за прошедший день
    - Если вы считаете, что новые траты относятся к следующему дню, используйте /nextday
    - Это сообщение можно показать ещё раз с помощью /help
    """
    await event.respond(help_msg)


async def init(bot):
    @bot.on(events.NewMessage(pattern="/help"))
    async def send_help(event: Message) -> None:
        await send_help(event)
